generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id                   String      @id @unique @default(uuid())
  name                 String      @db.VarChar(255)
  email                String      @unique
  role                 Role        @default(user)
  password             String      @db.VarChar(255)
  imageUrl             String?     @db.VarChar(255)
  imageName            String?     @db.VarChar(255)
  createdAt            DateTime    @default(now())
  updateAt             DateTime?   @updatedAt
  passwordResetToken   String?
  passwordResetExpires DateTime?
  file                 File[]
  folder               Folder[]    @relation("folderOwner")
  subFolder            SubFolder[] @relation("subFolderOwner")
}

enum Role {
  user
  admin
}

model File {
  id          String     @id @unique @default(uuid())
  name        String     @db.VarChar(255)
  systemName  String     @db.VarChar(255)
  url         String     @db.VarChar(255)
  path        String     @db.VarChar(255)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  owner       User       @relation(fields: [ownerId], references: [id])
  ownerId     String
  folder      Folder?    @relation("folderFile", fields: [folderId], references: [id])
  folderId    String?
  subFolder   SubFolder? @relation("subFolderFile", fields: [subFolderId], references: [id])
  subFolderId String?

  @@index([ownerId], name: "fileOwnerId")
  @@index([folderId], name: "fileFolderId")
  @@index([subFolderId], name: "fileSubFolderId")
}

model Folder {
  id        String   @id @unique @default(uuid())
  name      String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  owner     User     @relation("folderOwner", fields: [ownerId], references: [id])
  ownerId   String
  files     File[]   @relation("folderFile")

  @@index([ownerId], name: "folderOwnerId")
}

model SubFolder {
  id                String   @id @unique @default(uuid())
  name              String   @db.VarChar(255)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  owner             User     @relation("subFolderOwner", fields: [ownerId], references: [id])
  ownerId           String
  subFolderParentId String
  files             File[]   @relation("subFolderFile")

  @@index([ownerId], name: "subFolderOwnerId")
  @@index([subFolderParentId], name: "subFolderParentId")
}

// IMPORTANT COMMNANDS 

// INITIALIZE PRISMA
// npx prisma init --datasource-provider postgresql
// npx prisma init --datasource-provider mysql

// APPLY CHANGES TO ACTUAL DATABASE 
// npx prisma migrate dev --name test1

// GENERATE THE CLIENT TO INTERACT WITH THE DATABASE
// npx prisma generate

// TO EXPLORE AND MANUPLATE DATA USE PRISMA STUDIO
// npx prisma studio
